<?php
/*
  ___  _ __   ___ _   _  ___
 / _ \| '_ \ / _ \ | | |/ _ \
| (_) | | | |  __/ |_| |  __/
 \___/|_| |_|\___|\__, |\___|
                  |___/

oneye is released under the GNU Affero General Public License Version 3 (AGPL3)
 -> provided with this release in license.txt
 -> or via web at www.gnu.org/licenses/agpl-3.0.txt

Copyright Â© 2005 - 2010 eyeos Team (team@eyeos.org)
             since 2010 Lars Knickrehm (mail@lars-sh.de)
*/

function xeCatch_on_ChooseMap($params = '') {
	global $currentUser;
	global $myPid;
	if (!$params['run']) {
		xenonx('rawjs',array('js' => 'xeCatch.Remove("' . $myPid . '_xeCatch_Game");'));

		$GLOBALS['xeCatch_Label']->setText('Please choose a map and click "Play Map". You need to move the player by dragging it. You should try to not fall into holes, while enemies try to catch you. Try to survive as long as possible!');
		$GLOBALS['xeCatch_Container']->setContent('');
		$GLOBALS['xeCatch_Container']->setWidth($GLOBALS['xeCatch_Window']->width - 2);
		$GLOBALS['xeCatch_Container']->setX(0);
		$GLOBALS['xeCatch_Container']->setHeight($GLOBALS['xeCatch_Window']->height - 133);
		$GLOBALS['xeCatch_Container']->setY(109);
	}

	$mySortabletable = new Sortabletable(array(
		'dblsignal' => 'PlayMap',
		'father' => 'xeCatch_Container',
		'height' => $GLOBALS['xeCatch_Container']->height - 2,
		'name' => 'xeCatch_Sortabletable',
		'sortypes' => array('Hidden','String','String'),
		'theader' => array('id','xeCatch Map','Author'),
		'width' => $GLOBALS['xeCatch_Container']->width - 2,
		'x' => 0,
		'y' => 0
	));
	$mySortabletable->show();
	xenonWidgets('serialize',array($mySortabletable));
	$oldUser = $currentUser;
	$currentUser = ROOTUSER;
	$files = vfs('real_getDirContent',array(XENONOS_ROOT . '/' . APP_DIR . '/' . APP_CONF_SHARE . '/xeCatch/maps/'));
	if (is_array($files)) {
		foreach ($files as $file) {
			$xml = xenonXML('getXMLfile',array($file));
			$mySortabletable->addRow(array(basename($file,'.xml'),$xml['map'][0]['infos'][0]['name'][0] . ' ' . $xml['map'][0]['infos'][0]['version'][0],$xml['map'][0]['infos'][0]['author'][0]));
		}
	}
	$currentUser = $oldUser;

	if (!$params['run']) {
		$GLOBALS['xeCatch_Toolbar']->remove();
	}
	$myToolbar = new Toolbar(array(
		'father' => 'xeCatch_Window_Content',
		'name' => 'xeCatch_Toolbar'
	));
	$myToolbar->show();
	xenonWidgets('serialize',array($myToolbar));
	$myToolbar->addItem('PlayMap','index.php?theme=' . $_SESSION['usertheme'] . '&extern=icons/22x22/next.png','Play Map',array($mySortabletable));
	$myToolbar->addLine();
	$myToolbar->addItem('Fullscreen','index.php?theme=' . $_SESSION['usertheme'] . '&extern=icons/22x22/fullScreen.png','Full Screen','',1);
}

function xeCatch_on_PlayMap($params = '') {
	global $checknum;
	global $currentUser;
	global $myPid;
	$map = $params['xeCatch_Sortabletable'][0];
	if ($map) {
		xenonx('rawjs',array('js' => 'xeCatch.Remove("' . $myPid . '_xeCatch_Game");'));
		if (is_object($GLOBALS['xeCatch_Sortabletable'])) {
			$GLOBALS['xeCatch_Sortabletable']->remove();
		}
		xenonx('rawjs',array('js' => 'if (!document.getElementById("xeCatch_' . $map . '")) { dhtmlLoadCSS("index.php?theme=' . $_SESSION['usertheme'] . '&extern=css/apps/xeCatch/' . $map . '.css","xeCatch_' . $map . '"); }'));
		$oldUser = $currentUser;
		$currentUser = ROOTUSER;
		$xml = xenonXML('getXMLfile',array(XENONOS_ROOT . '/' . APP_DIR . '/' . APP_CONF_SHARE . '/xeCatch/maps/' . $map . '.xml'));
		$currentUser = $oldUser;

		$GLOBALS['xeCatch_Label']->setText($xml['map'][0]['infos'][0]['description'][0]);
		$GLOBALS['xeCatch_Container']->setContent('');
		$GLOBALS['xeCatch_Container']->setWidth($xml['map'][0]['field'][0]['width'][0]);
		$GLOBALS['xeCatch_Container']->setX(($GLOBALS['xeCatch_Window']->width - 2 - $GLOBALS['xeCatch_Container']->width) / 2);
		$GLOBALS['xeCatch_Container']->setHeight($xml['map'][0]['field'][0]['height'][0]);
		$GLOBALS['xeCatch_Container']->setY(89 + ($GLOBALS['xeCatch_Window']->height - 113 - $GLOBALS['xeCatch_Container']->height) / 2);

		xenonx('runjs',array('js' => 'xeCatch.CreateField("' . $myPid . '_xeCatch_Game","' . $myPid . '_xeCatch_Container","' . $myPid . '_xeCatch_Label",%s,' . mmap('array2js',array($xml['map'][0]['speed'][0])) . ',0,0,' . intval($xml['map'][0]['field'][0]['width'][0]) . ',' . intval($xml['map'][0]['field'][0]['height'][0]) . ');','tokens' => array($xml['map'][0]['field'][0]['className'][0])));
		xenonx('runjs',array('js' => 'xeCatch.CreatePlayer("' . $myPid . '_xeCatch_Game",%s,' . intval($xml['map'][0]['player'][0]['left'][0]) . ',' . intval($xml['map'][0]['player'][0]['top'][0]) . ',' . intval($xml['map'][0]['player'][0]['width'][0]) . ',' . intval($xml['map'][0]['player'][0]['height'][0]) . ');','tokens' => array($xml['map'][0]['player'][0]['className'][0])));
		foreach ($xml['map'][0]['holes'][0]['hole'] as $hole) {
			if (!$hole['message'][0]) {
				$hole['message'][0] = 'You fell into a hole after %s seconds.';
			}
			xenonx('runjs',array('js' => 'xeCatch.AddHole("' . $myPid . '_xeCatch_Game",%s,%s,' . intval($hole['left'][0]) . ',' . intval($hole['top'][0]) . ',' . intval($hole['width'][0]) . ',' . intval($hole['height'][0]) . ');','tokens' => array($hole['className'][0],i18n('translate',array('<div style="font-weight: bold; text-align: center;">' . $hole['message'][0] . '</div>')))));
		}
		foreach ($xml['map'][0]['enemies'][0]['enemy'] as $enemy) {
			if (!$enemy['message'][0]) {
				$enemy['message'][0] = 'You were caught after %s seconds.';
			}
			xenonx('runjs',array('js' => 'xeCatch.AddEnemy("' . $myPid . '_xeCatch_Game",%s,%s,' . intval($enemy['left'][0]) . ',' . intval($enemy['top'][0]) . ',' . intval($enemy['width'][0]) . ',' . intval($enemy['height'][0]) . ',' . intval($enemy['movex'][0]) . ',' . intval($enemy['movey'][0]) . ');','tokens' => array($enemy['className'][0],i18n('translate',array('<div style="font-weight: bold; text-align: center;">' . $enemy['message'][0] . '</div>')))));
		}

		$GLOBALS['xeCatch_Toolbar']->remove();
		$myToolbar = new Toolbar(array(
			'father' => 'xeCatch_Window_Content',
			'name' => 'xeCatch_Toolbar'
		));
		$myToolbar->show();
		xenonWidgets('serialize',array($myToolbar));
		$myToolbar->addItem('ChooseMap','index.php?theme=' . $_SESSION['usertheme'] . '&extern=icons/22x22/details.png','Choose Map');
		xenonx('runjs',array('js' => 'addItemToBar("' . $myPid . '_xeCatch_Toolbar","PlayMap","index.php?theme=' . $_SESSION['usertheme'] . '&extern=icons/22x22/refresh.png",%s,"' . base64_encode('eyeParam("xeCatch_Sortabletable","' . $map . '")') . '",' . $checknum . ',22,22,0,' . $myPid . ');','tokens' => array(i18n('translate',array('Restart Game')))));
		$myToolbar->addLine();
		$myToolbar->addItem('Fullscreen','index.php?theme=' . $_SESSION['usertheme'] . '&extern=icons/22x22/fullScreen.png','Full Screen','',1);
	} else {
		xenonx('messageBox',array('content' => 'Please select a map first.'));
	}
}

function xeCatch_on_Close($params = '') {
	proc('end');
}

function xeCatch_on_Fullscreen($params = '') {
	global $myPid;
	$GLOBALS['xeCatch_Window']->setFullScreen();
	if ($GLOBALS['xeCatch_Window']->fullScreen) {
		$press = 'Press';
	}
	xenonx('rawjs',array('js' => 'e = document.getElementById("' . $myPid . '_xeCatch_Toolbar");
	for (var i = 0; i < e.childNodes.length; i++) {
		if (e.childNodes[i].id == "' . $myPid . '_Fullscreen_Container") {
			e.childNodes[i].className = "blockbarItem' . $press . '_right";
		}
	}'));
}

function xeCatch_on_Message($params = '') {
	xenonWidgets('updateContent',$params);
}

function xeCatch_on_Resize($params = '') {
	$GLOBALS['xeCatch_Window']->width = $params['arg'][0];
	$GLOBALS['xeCatch_Window']->height = $params['arg'][1];
	$GLOBALS['xeCatch_Label']->setCss(array('width' => ($GLOBALS['xeCatch_Window']->width - 42) . 'px'));
	if (is_object($GLOBALS['xeCatch_Sortabletable'])) {
		$GLOBALS['xeCatch_Container']->setWidth($GLOBALS['xeCatch_Window']->width - 2);
		$GLOBALS['xeCatch_Container']->setHeight($GLOBALS['xeCatch_Window']->height - 133);
		$GLOBALS['xeCatch_Sortabletable']->setWidth($GLOBALS['xeCatch_Container']->width - 2);
		$GLOBALS['xeCatch_Sortabletable']->setHeight($GLOBALS['xeCatch_Container']->height - 2);
	} else {
		$GLOBALS['xeCatch_Container']->setX(($GLOBALS['xeCatch_Window']->width - 2 - $GLOBALS['xeCatch_Container']->width) / 2);
		$GLOBALS['xeCatch_Container']->setY(89 + ($GLOBALS['xeCatch_Window']->height - 113 - $GLOBALS['xeCatch_Container']->height) / 2);
	}
}
?>